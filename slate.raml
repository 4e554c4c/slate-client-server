#%RAML 1.0
---
title: SLATE API
baseUri: http://127.0.0.1:18080/{version}
version: v1alpha1

/users:
  get:
    description: List users
    queryParameters:
      access_token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    responses:
      200:
        description: List of users
        body:
          application/json:
            type: !include UserListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  post:
    description: Add a user
    queryParameters:
      access_token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      # only a current admin user is authorized to create other users
      application/json:
        type: !include UserCreateRequestSchema.json
    responses:
      200:
        description: Success
        body:
          application/json:
            type: !include UserInfoResultSchema.json
      400: 
        description: Insufficient information
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Missing attributes to create user account"
              }
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  /{userID}:
    get:
      # only the user or an admin should be allowed to fetch detailed user info
      description: Get user's detailed information
      queryParameters:
        access_token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Normal success
          body:
            application/json: 
              type: !include UserInfoResult.json
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: User not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "User not found"
                }
    put:
      description: Update a user's information
      queryParameters:
        access_token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      body:
        # only a current admin user is authorized to change another users's admin privileges
        application/json:
          type: !include UserUpdateRequestSchema.json
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404: 
          description: User not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "User not found"
                }
    delete:
      description: Remove a user
      queryParameters:
        access_token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404: 
          description: User not found
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "User not found"
                }
    /vos:
      get:
        description: List VOs to which the user belongs
        queryParameters:
          access_token:
            displayName: Access Token
            type: string
            description: User's authentication token
            required: true
        responses:
          200:
            description: success
            body:
              application/json:
                type: !include VOListResultSchema.json
          403:
            description: Authentication/authorization error
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "Not authorized"
                  }
          404:
            description: User not found
            body:
              application/json:
                type: !include ErrorResultSchema.json
                example: |
                  {
                    "kind": "Error",
                    "message": "User not found"
                  }    
      /{voID}:
        put:
          description: Add a VO membership
          queryParameters:
            access_token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "Not authorized"
                    }
            404:
              description: User or VO not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "User not found"
                    }  
        delete:
          description: Remove a VO membership
          queryParameters:
            access_token:
              displayName: Access Token
              type: string
              description: User's authentication token
              required: true
          responses:
            200:
              description: Success
            403:
              description: Authentication/authorization error
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "Not authorized"
                    }
            404:
              description: User or VO membership not found
              body:
                application/json:
                  type: !include ErrorResultSchema.json
                  example: |
                    {
                      "kind": "Error",
                      "message": "User not found"
                    }
/find_user:
  get:
    description: Look up a user account by globus ID
    # only admin users are permitted to use this request
    queryParameters:
      access_token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      globus_id:
        displayName: Globus ID
        type: string
        description: User's globus UUID
        required: true
    responses:
      200:
        description: List of clusters
        body:
          application/json: !include FindUserResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      404:
        description: User not found error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "User not found"
              }
/clusters:
  get: # slate cluster list
    description: List clusters
    queryParameters:
      access_token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    responses:
      200:
        description: List of clusters
        body:
          application/json: !include ClusterListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  post: # slate cluster create
    description: Create a cluster
    queryParameters:
      access_token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      application/json:
        type: !include ClusterCreateRequestSchema.json
    responses:
      200:
        description: Normal success
        body:
          application/json:
            type: !include ClusterCreateResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      409:
        description: Name collision error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Cluster name is already in use"
              }
  /{clusterID}:
    delete: # slate cluster delete
      description: Destroy a cluster
      queryParameters:
        access_token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Normal success
          body:
            application/json:
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: Cluster not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Cluster not found"
                }
    # TODO: what other actions are required for administering clusters?
/vos:
  get: # slate vo list
    description: List existing VOs
    queryParameters:
      access_token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    responses:
      200:
        description: List of VOs
        body:
          application/json: !include VOListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  post: # slate vo create
    description: Create a VO
    queryParameters:
      access_token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
    body:
      application/json:
        type: !include VOCreateRequestSchema.json
    responses:
      200:
        description: Normal success
        body:
          application/json:
            type: !include VOCreateResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      409:
        description: Name collision error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "VO name is already in use"
              }
  /{voID}:
    delete: # slate vo delete
      description: Destroy a VO
      queryParameters:
        access_token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Normal success
          body:
            application/json:
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: VO not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "VO not found"
                }
    # TODO: what other actions are required for administering VOs?
/apps:
  get: # app list
    description: List known applications
    queryParameters:
      access_token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      dev:
        displayName: Development flag
        type: boolean
        description: Whether to search the developer repository
        required: false
    responses:
      200:
        description: List of available applications
        body:
          application/json: !include AppListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
  /{appName}:
    get: # slate app conf
      description: Get an application's configuration
      queryParameters:
        access_token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
        dev:
          displayName: Development flag
          type: boolean
          description: Whether to search the developer repository
          required: false
      responses:
        200: # normal success
          body:
            application/json:
              type: !include AppConfResultSchema.json
        403: # if authentication or authorization fails
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404: # if appname is not known?
          description: Application not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Application not found"
                }
    post: # slate app install
      description: Install an application
      queryParameters:
        access_token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
        dev:
          displayName: Development flag
          description: Whether to search the developer repository
          required: false
      body:
        application/json:
          type: !include AppInstallRequestSchema.json
      responses:
        200: # normal success
          body:
            application/json:
              type: !include AppInstallResultSchema.json
        400: 
          description: Unknown VO or cluster
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Invalid VO"
                }
        403: # if authentication or authorization fails
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404: # if appname is not known?
          description: Application not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Application not found"
                }
/instances:
  get: # slate app list
    description: List deployed application instances
    queryParameters:
      access_token:
        displayName: Access Token
        type: string
        description: User's authentication token
        required: true
      vo:
        displayName: Virtual Organization
        type: string
        description: 
        required: true
      cluster:
        displayName: cluster
        type: string
        description: 
        required: true
    responses:
      200:
        description: List of installed applications
        body:
          application/json: !include InstanceListResultSchema.json
      403:
        description: Authentication/authorization error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "Not authorized"
              }
      404:
        description: VO or cluster not found error
        body:
          application/json:
            type: !include ErrorResultSchema.json
            example: |
              {
                "kind": "Error",
                "message": "VO not found"
              }
  /{instance_id}:
    get:
      description: Get information about an application instance
      queryParameters:
        access_token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Success
          body:
            application/json:
              type: !include InstanceInfoResultSchema.json
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: Instance not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Application instance not found"
                }
    delete: # slate app delete
      description: Delete an application instance
      queryParameters:
        access_token:
          displayName: Access Token
          type: string
          description: User's authentication token
          required: true
      responses:
        200:
          description: Successful deletion
        403:
          description: Authentication/authorization error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Not authorized"
                }
        404:
          description: Instance not found error
          body:
            application/json:
              type: !include ErrorResultSchema.json
              example: |
                {
                  "kind": "Error",
                  "message": "Application instance not found"
                }